openapi: 3.0.4
info:
  title: IATI Register Your Data API
  description: |-
    This API provides access to the IATI Registry primarily for the purposes of
    making changes to the metadata and URLs in the registry.  It is not
    intended for public access to obtain lists of datasets and reporting
    organisations.

    # Authentication and Authorisation
    Almost all endpoints are only accessible with authorisation.  Most
    providers will need to provide an access token obtained via OpenID Connect
    from IATI Single Sign On (SSO). Access via an OAuth 2.0 Client Credentials
    grant is also possible.  Both access tokens will be scoped to provide
    appropriate access to the API and the required scopes should be requested
    from the identity server. The access token must be forwarded in each
    request to the API as a `Bearer` token in the `Authentication` header.

    ## OpenID Connect (OIDC)
    The diagram below illustrates the general sequence of actions from starting
    the authentication process with SSO to making an API call.  The [details of
    the OIDC flow can be found elsewhere
    ](https://infosec.mozilla.org/guidelines/iam/openid_connect.html) and are
    not repeated here.  It is **strongly recommended** that providers use a
    well-tested and robust OIDC library for communication with the identity
    server, e.g., [mozilla-django-oidc
    ](https://github.com/mozilla/mozilla-django-oidc) for applications
    developed in Django.

    ![Diagram of typical flow](images/sso-sequence.png)

    Scopes control access to make API calls and it is important to check that
    the access token contains the scopes you have requested.  Authorisation to
    access individual resources is controlled separately via an internal *fine-
    grained authorisation* mechanism.

    After you receive an access token you should verify it's signature before
    further use.  Again, a well-tested an robust OIDC library should be able
    to do this for you.

    ## Client Credentials (OAuth 2.0)
    Providers who have specific machine-to-machine needs will be able to apply
    for access via a client credentials OAuth 2.0 grant.  You will be provided
    with a `client_id` and `client_secret` that will be exchanged for an access
    token at the identity server OAuth 2.0 token endpoint.  The appropriate
    scopes must be requested for the calls you wish to make.  These scopes will
    control access to make API calls and it is important to check that the
    access token contains the scopes you have requested.  A given `client_id`
    will be configured to access a single organisation and will have
    administrator level access to that organisation.
  contact:
    email: support@iatistandard.org
  license:
    name: GNU Affero General Public Licence 3.0
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
  version: 0.9.0
servers:
  - url: "https://registry.iatistandard.org/api/v1"
  - url: "https://dev.registry.iatistandard.org/api/v1"
# ===============================================================
#
# Endpoints
#
# ===============================================================
paths:
  #
  # Reporting orgs resource endpoints
  #
  /reporting-orgs:
    get:
      operationId: get_reporting_orgs
      summary: Get a list of all reporting orgs that the user has access to.
      description: >-
        Get reporting orgs (and basic fields) that the caller has access to.  If the caller has no organisation
        authorisation then an empty list will be returned.
      parameters:
        - name: include_meta
          in: query
          description: >-
            Whether to include all organisation metadata with each record.  By default only returns the name and IATI
            organisation identifier of an organisation.
          required: false
          schema:
            type: string
            default: "no"
            enum:
              - "yes"
              - "no"
        - name: include_actions
          in: query
          description: Whether to include all organisation actions with each record.  By default does not return any.
          required: false
          schema:
            type: string
            default: "no"
            enum:
              - "yes"
              - "no"
      responses:
        "200":
          description: Successfully returned list of organisations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingOrgList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:reporting_org"
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org"
      tags:
        - Reporting Orgs
    post:
      operationId: create_reporting_org
      summary: Create a new organisation.
      description: >-
        Create a new reporting organisation within IATI.  The organisation will be pending approval until manually
        verified by IATI Support.
      requestBody:
        description: Metadata used to setup a reporting organisation.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportingOrgCreateableData"
      responses:
        "201":
          description: Organisation created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingOrgCreated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org"
            - "ryd:reporting_org:create"
      tags:
        - Reporting Orgs
  "/reporting-orgs/{oid}":
    get:
      operationId: get_reporting_org_detail
      summary: Get detailed information about an organisation.
      parameters:
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
        - name: include_actions
          in: query
          description: Whether to include all organisation actions with the response.  By default does not.
          required: false
          schema:
            type: string
            default: "no"
            enum:
              - "yes"
              - "no"
      responses:
        "200":
          description: Successfully retrieved organisation details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingOrgRead"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:reporting_org"
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org"
      tags:
        - Reporting Orgs
    patch:
      operationId: update_reporting_org
      summary: Update information about an organisation
      description: Update metadata on an organisation.  Some fields cannot be changed.
      parameters:
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
        - name: include_actions
          in: query
          description: Whether to include all organisation actions with the response.  By default does not.
          required: false
          schema:
            type: string
            default: "no"
            enum:
              - "yes"
              - "no"
      requestBody:
        description: Metadata for the organisation that the caller wants to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportingOrgUpdateableData"
      responses:
        "200":
          description: Successfuly updated organisation record.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingOrgRead"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:reporting_org"
            - "ryd:reporting_org:update"
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org"
            - "ryd:reporting_org:update"
      tags:
        - Reporting Orgs
    delete:
      operationId: delete_reporting_org
      summary: Delete an organisation.
      parameters:
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
      responses:
        "200":
          description: Successfully deleted organisation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:reporting_org:delete"
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org:delete"
      tags:
        - Reporting Orgs
  "/reporting-orgs/{oid}/users":
    get:
      operationId: get_reporting_org_users
      summary: Get list of users associated with this organisation.
      parameters:
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
      responses:
        "200":
          description: Successfully returned list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org:user"
      tags:
        - Reporting Orgs
        - Users
  "/reporting-orgs/{oid}/datasets":
    get:
      operationId: get_reporting_org_datasets
      summary: Get list of datasets associated with this organisation.
      parameters:
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
        - name: include_actions
          in: query
          description: Whether to include all dataset actions with each record.  By default does not return any.
          required: false
          schema:
            type: string
            default: "no"
            enum:
              - "yes"
              - "no"
      responses:
        "200":
          description: Successfully returned list of datasets.
          content:
            application/json:
              schema:
                type: array
                items:
                  # type: object
                  $ref: "#/components/schemas/DatasetList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:dataset"
        - openIdConnect:
            - "ryd"
            - "ryd:dataset"
      tags:
        - Reporting Orgs
        - Datasets
      #
      # User-focused resource endpoints
      #
  "/users/{uid}/reporting-org":
    post:
      operationId: add_user_to_reporting_org
      summary: >-
        Apply to be associated with an organisation.  Will by default be pending until approved by an admin of that
        organisation.
      parameters:
        - name: uid
          in: path
          description: UUID of user.
          required: true
          schema:
            type: string
            format: uuid
            example: 6423b556-73de-4969-a2f1-91a38bca92b3
      requestBody:
        description: Object containing the UUID of the organisation that the user wants to join.
        content:
          application/json:
            schema:
              type: object
              properties:
                oid:
                  type: string
                  format: uuid
                  example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
      responses:
        "200":
          description: Successfully marked user as pending approval with an organisation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org:user"
      tags:
        - Users
  "/users/{uid}/reporting-org/{oid}":
    put:
      operationId: update_user_role_in_reporting_org
      summary: Change the user role for a user in a given organisation.
      parameters:
        - name: uid
          in: path
          description: UUID of user.
          required: true
          schema:
            type: string
            format: uuid
            example: 6423b556-73de-4969-a2f1-91a38bca92b3
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
      requestBody:
        description: Object containing the new role for the user.
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: admin
                  enum:
                    - admin
                    - editor
                    - contributor
      responses:
        "200":
          description: Successfully changed user role.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org:user:update"
      tags:
        - Users
    delete:
      operationId: remove_user_from_reporting_org
      summary: Remove a user from an organisation.  This call will not remove the user's account.
      parameters:
        - name: uid
          in: path
          description: UUID of user.
          required: true
          schema:
            type: string
            format: uuid
            example: 6423b556-73de-4969-a2f1-91a38bca92b3
        - name: oid
          in: path
          description: UUID of organisation.
          required: true
          schema:
            type: string
            format: uuid
            example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
      responses:
        "200":
          description: Successfully marked user as pending approval with an organisation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - openIdConnect:
            - "ryd"
            - "ryd:reporting_org:user:update"
      tags:
        - Users
      #
      # Dataset-focused resource endpoints
      #
  /datasets:
    post:
      operationId: create_dataset
      summary: Add a new dataset to an organisation.
      description: Creates a new dataset record owned by the organisation referenced in the request body.
      requestBody:
        description: Metadata describing the new dataset.
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/DatasetUpdateableData"
                - $ref: "#/components/schemas/DatasetOwnerOrg"
      responses:
        "201":
          description: Successfully created dataset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetRead"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/OrgNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:dataset"
        - openIdConnect:
            - "ryd"
            - "ryd:dataset"
      tags:
        - Datasets
  "/datasets/{did}":
    get:
      operationId: get_dataset_detail
      summary: Get detailed information about a dataset.
      parameters:
        - name: did
          in: path
          description: UUID of dataset.
          required: true
          schema:
            type: string
            format: uuid
            example: ac30e27a-92bd-4f53-8720-16ae9b6aeaab
      responses:
        "200":
          description: Successfully found dataset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetRead"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DatasetNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:dataset"
        - openIdConnect:
            - "ryd"
            - "ryd:dataset"
      tags:
        - Datasets
    patch:
      operationId: update_dataset
      summary: Update a dataset.
      parameters:
        - name: did
          in: path
          description: UUID of dataset.
          required: true
          schema:
            type: string
            format: uuid
            example: ac30e27a-92bd-4f53-8720-16ae9b6aeaab
      requestBody:
        description: Fields that need to be updated in dataset metadata.
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/DatasetUpdateableData"
      responses:
        "200":
          description: Successfully updated dataset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetRead"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DatasetNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:dataset"
            - "ryd:dataset:update"
        - openIdConnect:
            - "ryd"
            - "ryd:dataset"
            - "ryd:dataset:update"
      tags:
        - Datasets
    delete:
      operationId: delete_dataset
      summary: Delete a dataset.
      parameters:
        - name: did
          in: path
          description: UUID of dataset.
          required: true
          schema:
            type: string
            format: uuid
            example: ac30e27a-92bd-4f53-8720-16ae9b6aeaab
      responses:
        "200":
          description: Successfully deleted organisation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DatasetNotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
            - "ryd:dataset:delete"
        - openIdConnect:
            - "ryd"
            - "ryd:dataset:delete"
      tags:
        - Datasets
  /licences:
    get:
      operationId: get_licences
      summary: Get a list of licences available in IATI.
      description: >-
        Get a list of all the licences available in IATI, their IDs, full and short names, and how they should be
        used.  Some licences are only supported for legacy datasets, of the ones that can be used for new datasets some
        are preferred.
      responses:
        "200":
          description: Successfully returned dataset list.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Licences"
        "500":
          $ref: "#/components/responses/InternalServerError"
      tags:
        - Miscellaneous
  /access-check:
    get:
      operationId: access_check
      summary: Check client and user access to the Register Your Data API.
      description: >-
        This endpoint is provided to help clients quickly verify if the client (for example, through a client
        credentials flow) or if the client and logged-in user (through OpenID Connect) have access to the API without
        having to call another endpoint that makes further calls through the IATI infrastructure.
      responses:
        "200":
          description: Client and user have access to the Register Your Data API.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
              example:
                status: success
                error: null
                data: null
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorised"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - clientCredentials:
            - "ryd"
        - openIdConnect:
            - "ryd"
      tags:
        - Miscellaneous
components:
  # ===============================================================
  #
  # Schemas
  #
  # ===============================================================
  schemas:
    #
    # Base response schema
    #
    BaseResponse:
      description: Basic API response format.
      type: object
      properties:
        status:
          type: string
        error:
          type: object
          properties:
            status_code:
              type: integer
            error_msg:
              type: string
        data:
          type: object
    #
    # Reporting org schemas
    #
    ReportingOrgUpdateableData:
      description: >-
        Some reporting organisation data can not be updated through the API.  This schema contains only that data which
        can be changed.
      type: object
      properties:
        human_readable_name:
          type: string
          example: Aid Agency
        description:
          type: string
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et
            dolore magna aliqua.
        hq_country:
          type: string
          example: CO
        region:
          type: string
          example: "489"
        organisation_type:
          type: string
          example: Regional NGO
        data_portal_url:
          type: string
          format: uri
          example: "https://www.example.org/data-portal"
        exclusions_policy_url:
          type: string
          format: uri
          example: "https://www.example.org/exclusions-policy"
        reporting_source_type:
          type: string
          example: primary_source
          enum:
            - primary_source
            - secondary_source
        default_licence_id:
          type: string
          example: gpl-3.0
        contact_email:
          type: string
          format: email
          example: org.admin@example.org
        address:
          type: string
          example: Fake Address
        phone:
          type: string
          format: phone
          example: 123-4567-8901
        fax:
          type: string
          format: phone
          example: 456-7890-1234
        website:
          type: string
          format: uri
          example: "https://www.example.org/"
    ReportingOrgCreateableData:
      description: Data that can be written to a reporting organisation record when creating a reporting organisation.
      allOf:
        - $ref: "#/components/schemas/ReportingOrgUpdateableData"
        - type: object
          properties:
            short_name:
              type: string
              example: aidagy
            organisation_identifier:
              type: string
              example: CO-ABC-123456
    ReportingOrgReadableData:
      description: >-
        All metadata about a reporting organisation that can be read via the API. This does not include actions that
        have been applied to an organisation.
      allOf:
        - $ref: "#/components/schemas/ReportingOrgCreateableData"
        - type: object
          properties:
            registry_approved:
              type: boolean
              example: true
            first_publication_date:
              type: string
              format: date-time
              example: "2023-01-15T16:54:14+00:00"
            number_of_published_datasets:
              type: number
              format: int
              example: 12
            created_date:
              type: string
              format: date-time
              example: "2023-01-12T09:42:11+00:00"
      #
      # Org and Dataset action objects
      #
    OrgAction:
      description: Example of an Organisation Action where organisation metadata has been updated.
      type: object
      properties:
        action_type:
          type: string
          enum:
            - create
            - update_metadata
            - delete
          example: update_metadata
        user_application_name:
          type: string
          example: IATI Account
        user_application_id:
          type: string
          format: uuid
          example: 59530216-574b-4b68-8489-ca869fcee193
        user_name:
          type: string
          example: John Smith
        user_id:
          type: string
          format: uuid
          example: 6423b556-73de-4969-a2f1-91a38bca92b3
        created_date:
          type: string
          format: date-time
          example: "2023-12-25T23:00:12+00:00"
    DatasetAction:
      description: Example of a Dataset Action where a dataset has been updated.
      type: object
      properties:
        action_type:
          type: string
          enum:
            - create
            - update_metadata
            - update_url
            - change_visibility
            - delete
          example: update_url
        user_application_name:
          type: string
          example: IATI Account
        user_application_id:
          type: string
          format: uuid
          example: 59530216-574b-4b68-8489-ca869fcee193
        user_name:
          type: string
          example: John Smith
        user_id:
          type: string
          format: uuid
          example: 6423b556-73de-4969-a2f1-91a38bca92b3
        created_date:
          type: string
          format: date-time
          example: "2023-12-25T23:00:12+00:00"
    #
    # Reporting org response schemas
    #
    ReportingOrgList:
      description: Schema for a list of reporting organisations.
      properties:
        status:
          type: string
          example: success
        error:
          type: object
          example: null
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
              user_role:
                type: string
                example: editor
              metadata:
                allOf:
                  - $ref: "#/components/schemas/ReportingOrgReadableData"
              reporting_org_actions:
                type: array
                items:
                  $ref: "#/components/schemas/OrgAction"
    ReportingOrgCreated:
      description: Example of the response where an organisation has been created.
      properties:
        status:
          type: string
          example: success
        error:
          type: object
          example: null
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
              user_role:
                type: string
                example: admin
              metadata:
                allOf:
                  - $ref: "#/components/schemas/ReportingOrgReadableData"
                  - type: object
                    properties:
                      registry_approved:
                        example: false
                      first_publication_date:
                        example: ""
                      number_of_published_datasets:
                        example: 0
    ReportingOrgRead:
      description: Example of the response where detailed metadata for an organisation has been returned.
      properties:
        status:
          type: string
          example: success
        error:
          type: object
          example: null
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
            user_role:
              type: string
              example: editor
            metadata:
              allOf:
                - $ref: "#/components/schemas/ReportingOrgReadableData"
                - type: object
                  properties:
                    registry_approved:
                      type: boolean
                      example: true
                    first_publication_date:
                      type: string
                      format: date-time
                      example: "2023-01-15T16:54:14+00:00"
                    number_of_published_datasets:
                      type: number
                      format: int
                      example: 12
            reporting_org_actions:
              type: array
              items:
                $ref: "#/components/schemas/OrgAction"
    #
    # User response schemas
    #
    UserList:
      description: List of users associated with an organisation.
      properties:
        status:
          type: string
          example: success
        error:
          type: object
          example: null
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 6423b556-73de-4969-a2f1-91a38bca92b3
              name:
                type: string
                example: John Smith
              email:
                type: string
                example: admin@example.org
              role:
                type: string
                example: admin
    #
    # Dataset schemas
    #
    DatasetOwnerOrg:
      description: Object containing the owner organisation for a dataset.
      type: object
      properties:
        owner_organisation_id:
          type: string
          format: uuid
          example: 5401c7f4-e9fd-4ce3-b184-bfe1cb71a9f8
    DatasetUpdateableData:
      description: >-
        Some dataset metadata can not be updated through the API.  This schema contains only that data which can be
        changed.
      type: object
      properties:
        short_name:
          type: string
          example: aidagcy-activity-3
        source_type:
          type: string
          example: primary_source
          enum:
            - primary_source
            - secondary_source
        url:
          type: string
          format: uri
          example: "https://www.example.org/datasets/activity3.xml"
        visibility:
          type: string
          example: public
        licence_id:
          type: string
          example: gpl-3.0
    DatasetReadableData:
      description: Example schema for dataset metadata that is readable.
      allOf:
        - $ref: "#/components/schemas/DatasetUpdateableData"
        - type: object
          properties:
            last_url_update_date:
              type: string
              format: date-time
              example: "2023-01-01T23:11:21+00:00"
            last_metadata_update_date:
              type: string
              format: date-time
              example: "2022-05-01T13:42:34+00:00"
      #
      # Dataset response schemas
      #
    DatasetList:
      description: List of datasets associated with a reporting organisation.
      properties:
        status:
          type: string
          example: success
        error:
          type: object
          example: null
        data:
          type: array
          items:
            type: object
            allOf:
              - $ref: "#/components/schemas/DatasetRead"
    DatasetRead:
      description: Example schema for reading dataset metadata.
      type: object
      allOf:
        - $ref: "#/components/schemas/DatasetOwnerOrg"
        - type: object
          properties:
            id:
              type: string
              format: uuid
              example: ac30e27a-92bd-4f53-8720-16ae9b6aeaab
            metadata:
              type: object
              allOf:
                - $ref: "#/components/schemas/DatasetReadableData"
            dataset_actions:
              type: array
              items:
                $ref: "#/components/schemas/DatasetAction"
    Licences:
      description: "List of licence ids, their names, and status."
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: gpl-3.0
          full_label:
            type: string
            example: "OSI Approved::GNU General Public License version 3.0 (GPLv3)"
          short_label:
            type: string
            example: GNU General Public License version 3.0 (GPLv3)
          status:
            type: string
            example: supported
            enum:
              - legacy
              - supported
              - preferred
  # ===============================================================
  #
  # All responses
  #
  # ===============================================================
  responses:
    #
    # 4xx responses
    BadRequest:
      description: Often returned if there is a problem with the access token.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 400
                  error_msg:
                    type: string
                    example: >-
                      There is a problem with your credentials.  If this persists please report error to the provider
                      of the tool you are using to access the IATI Registry.
    Unauthorised:
      description: >-
        Unauthorised access.  The request may not have included an Authorisation header, or may have been missing the
        `Bearer` scheme label, or there may have been some problem with the access token.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 401
                  error_msg:
                    type: string
                    example: >-
                      No authorisation information provided.  If this persists please report error to the provider of
                      the tool you are using to access the IATI Registry.
    Forbidden:
      description: |-
        Forbidden.  The access token may have not have provided authorisation
        to access the API to perform the requested action, or the user did not
        have the appropriate permissions to perform the requested action.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 403
                  error_msg:
                    type: string
                    example: |-
                      No authorisation to perform this operation on this
                      resource.
    OrgNotFound:
      description: Cannot find an organisation with this UUID in the registry.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 404
                  error_msg:
                    type: string
                    example: Organisation UUID is not known in the registry.
    DatasetNotFound:
      description: Cannot find a dataset with this UUID in the registry.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 404
                  error_msg:
                    type: string
                    example: Dataset UUID is not known in the registry.
    NotFound:
      description: Cannot find a record with this UUID in the registry.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 404
                  error_msg:
                    type: string
                    example: UUID is not known in the registry.
    InternalServerError:
      description: Returned for a range of internal server issues.
      content:
        application/json:
          schema:
            properties:
              status:
                type: string
                example: failed
              data:
                example: null
              error:
                type: object
                properties:
                  status_code:
                    type: integer
                    example: 500
                  error_msg:
                    type: string
                    example: >-
                      There is a problem with your credentials.  If this persists please report error to the provider
                      of the tool you are using to access the IATI Registry.
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      description: >-
        Most clients should access Register Your Data by logging a user into their IATI Account using single-sign on
        and then pass the access token with requests to the API.
      openIdConnectUrl: "https://api.eu.asgardeo.io/t/iati/oauth2/token/.well-known/openid-configuration"
    clientCredentials:
      type: oauth2
      description: >-
        Some use-cases may require machine-to-machine access where it is not possible to log a user into their IATI
        Account.  In these cases a client credential flow can be used to access the API.
      flows:
        clientCredentials:
          tokenUrl: "https://api.eu.asgardeo.io/t/iati/oauth2/token"
          scopes:
            "ryd": Regular access to the Register Your Data API
            "ryd:reporting_org": Read organisation metadata.
            "ryd:reporting_org:create": Create organisations.
            "ryd:reporting_org:update": Update organisation metadata.
            "ryd:reporting_org:delete": Delete an organisation.
            "ryd:reporting_org:user": List the users associated with an organisation.
            "ryd:reporting_org:user:update": Update the users associated with an organisation.
            "ryd:dataset": Create and read.
            "ryd:dataset:update": Update dataset metadata and URLs.
            "ryd:dataset:delete": Delete datasets.
tags:
  - name: Reporting Orgs
    description: |-
      For getting lists of organisations associated with a user, creating
      new organisations, updating and deleting organisation metadata, finding
      all the actions carried out on organisation metadata, finding lists
      of users, and lists of datasets owned by an organisation.
  - name: Datasets
    description: |-
      For getting lists of datasets associated with an organisation, creating
      new datasets, updating metadata and urls, deleting datasets, and finding
      all the actions carried out on dataset metadata/urls.
  - name: Users
    description: For managing the roles users have within organisations.
  - name: Miscellaneous
    description: Endpoints that support working with the API or provide additional metadata.
